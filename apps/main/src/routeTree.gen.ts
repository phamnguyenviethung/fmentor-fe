/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthLayoutImport } from './routes/_authLayout'
import { Route as AuthLayoutIndexImport } from './routes/_authLayout/index'
import { Route as AuthLayoutDepositIndexImport } from './routes/_authLayout/deposit/index'
import { Route as AuthLayoutAvailabilityIndexImport } from './routes/_authLayout/availability/index'
import { Route as publicJoinIndexImport } from './routes/(public)/join/index'
import { Route as AuthLayoutRequestMentoringImport } from './routes/_authLayout/request/mentoring'
import { Route as AuthLayoutRequestLecturingImport } from './routes/_authLayout/request/lecturing'
import { Route as AuthLayoutRequestAppointmentImport } from './routes/_authLayout/request/appointment'
import { Route as AuthLayoutProjectCreateImport } from './routes/_authLayout/project/create'
import { Route as AuthLayoutMeTransactionImport } from './routes/_authLayout/me/transaction'
import { Route as AuthLayoutMeProfileImport } from './routes/_authLayout/me/profile'
import { Route as AuthLayoutMeAppointmentImport } from './routes/_authLayout/me/appointment'
import { Route as publicFakeLoginTokenImport } from './routes/(public)/fake-login.$token'
import { Route as publicAuthLoginImport } from './routes/(public)/auth/login'
import { Route as AuthLayoutProjectDetailIdImport } from './routes/_authLayout/project/detail/$id'
import { Route as publicProfileMentorIdImport } from './routes/(public)/profile/mentor.$id'
import { Route as publicAuthGoogleCallbackImport } from './routes/(public)/auth/google.callback'

// Create/Update Routes

const AuthLayoutRoute = AuthLayoutImport.update({
  id: '/_authLayout',
  getParentRoute: () => rootRoute,
} as any)

const AuthLayoutIndexRoute = AuthLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const AuthLayoutDepositIndexRoute = AuthLayoutDepositIndexImport.update({
  id: '/deposit/',
  path: '/deposit/',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const AuthLayoutAvailabilityIndexRoute =
  AuthLayoutAvailabilityIndexImport.update({
    id: '/availability/',
    path: '/availability/',
    getParentRoute: () => AuthLayoutRoute,
  } as any)

const publicJoinIndexRoute = publicJoinIndexImport.update({
  id: '/(public)/join/',
  path: '/join/',
  getParentRoute: () => rootRoute,
} as any)

const AuthLayoutRequestMentoringRoute = AuthLayoutRequestMentoringImport.update(
  {
    id: '/request/mentoring',
    path: '/request/mentoring',
    getParentRoute: () => AuthLayoutRoute,
  } as any,
)

const AuthLayoutRequestLecturingRoute = AuthLayoutRequestLecturingImport.update(
  {
    id: '/request/lecturing',
    path: '/request/lecturing',
    getParentRoute: () => AuthLayoutRoute,
  } as any,
)

const AuthLayoutRequestAppointmentRoute =
  AuthLayoutRequestAppointmentImport.update({
    id: '/request/appointment',
    path: '/request/appointment',
    getParentRoute: () => AuthLayoutRoute,
  } as any)

const AuthLayoutProjectCreateRoute = AuthLayoutProjectCreateImport.update({
  id: '/project/create',
  path: '/project/create',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const AuthLayoutMeTransactionRoute = AuthLayoutMeTransactionImport.update({
  id: '/me/transaction',
  path: '/me/transaction',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const AuthLayoutMeProfileRoute = AuthLayoutMeProfileImport.update({
  id: '/me/profile',
  path: '/me/profile',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const AuthLayoutMeAppointmentRoute = AuthLayoutMeAppointmentImport.update({
  id: '/me/appointment',
  path: '/me/appointment',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const publicFakeLoginTokenRoute = publicFakeLoginTokenImport.update({
  id: '/(public)/fake-login/$token',
  path: '/fake-login/$token',
  getParentRoute: () => rootRoute,
} as any)

const publicAuthLoginRoute = publicAuthLoginImport.update({
  id: '/(public)/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthLayoutProjectDetailIdRoute = AuthLayoutProjectDetailIdImport.update({
  id: '/project/detail/$id',
  path: '/project/detail/$id',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const publicProfileMentorIdRoute = publicProfileMentorIdImport.update({
  id: '/(public)/profile/mentor/$id',
  path: '/profile/mentor/$id',
  getParentRoute: () => rootRoute,
} as any)

const publicAuthGoogleCallbackRoute = publicAuthGoogleCallbackImport.update({
  id: '/(public)/auth/google/callback',
  path: '/auth/google/callback',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authLayout': {
      id: '/_authLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_authLayout/': {
      id: '/_authLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthLayoutIndexImport
      parentRoute: typeof AuthLayoutImport
    }
    '/(public)/auth/login': {
      id: '/(public)/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof publicAuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/(public)/fake-login/$token': {
      id: '/(public)/fake-login/$token'
      path: '/fake-login/$token'
      fullPath: '/fake-login/$token'
      preLoaderRoute: typeof publicFakeLoginTokenImport
      parentRoute: typeof rootRoute
    }
    '/_authLayout/me/appointment': {
      id: '/_authLayout/me/appointment'
      path: '/me/appointment'
      fullPath: '/me/appointment'
      preLoaderRoute: typeof AuthLayoutMeAppointmentImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_authLayout/me/profile': {
      id: '/_authLayout/me/profile'
      path: '/me/profile'
      fullPath: '/me/profile'
      preLoaderRoute: typeof AuthLayoutMeProfileImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_authLayout/me/transaction': {
      id: '/_authLayout/me/transaction'
      path: '/me/transaction'
      fullPath: '/me/transaction'
      preLoaderRoute: typeof AuthLayoutMeTransactionImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_authLayout/project/create': {
      id: '/_authLayout/project/create'
      path: '/project/create'
      fullPath: '/project/create'
      preLoaderRoute: typeof AuthLayoutProjectCreateImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_authLayout/request/appointment': {
      id: '/_authLayout/request/appointment'
      path: '/request/appointment'
      fullPath: '/request/appointment'
      preLoaderRoute: typeof AuthLayoutRequestAppointmentImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_authLayout/request/lecturing': {
      id: '/_authLayout/request/lecturing'
      path: '/request/lecturing'
      fullPath: '/request/lecturing'
      preLoaderRoute: typeof AuthLayoutRequestLecturingImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_authLayout/request/mentoring': {
      id: '/_authLayout/request/mentoring'
      path: '/request/mentoring'
      fullPath: '/request/mentoring'
      preLoaderRoute: typeof AuthLayoutRequestMentoringImport
      parentRoute: typeof AuthLayoutImport
    }
    '/(public)/join/': {
      id: '/(public)/join/'
      path: '/join'
      fullPath: '/join'
      preLoaderRoute: typeof publicJoinIndexImport
      parentRoute: typeof rootRoute
    }
    '/_authLayout/availability/': {
      id: '/_authLayout/availability/'
      path: '/availability'
      fullPath: '/availability'
      preLoaderRoute: typeof AuthLayoutAvailabilityIndexImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_authLayout/deposit/': {
      id: '/_authLayout/deposit/'
      path: '/deposit'
      fullPath: '/deposit'
      preLoaderRoute: typeof AuthLayoutDepositIndexImport
      parentRoute: typeof AuthLayoutImport
    }
    '/(public)/auth/google/callback': {
      id: '/(public)/auth/google/callback'
      path: '/auth/google/callback'
      fullPath: '/auth/google/callback'
      preLoaderRoute: typeof publicAuthGoogleCallbackImport
      parentRoute: typeof rootRoute
    }
    '/(public)/profile/mentor/$id': {
      id: '/(public)/profile/mentor/$id'
      path: '/profile/mentor/$id'
      fullPath: '/profile/mentor/$id'
      preLoaderRoute: typeof publicProfileMentorIdImport
      parentRoute: typeof rootRoute
    }
    '/_authLayout/project/detail/$id': {
      id: '/_authLayout/project/detail/$id'
      path: '/project/detail/$id'
      fullPath: '/project/detail/$id'
      preLoaderRoute: typeof AuthLayoutProjectDetailIdImport
      parentRoute: typeof AuthLayoutImport
    }
  }
}

// Create and export the route tree

interface AuthLayoutRouteChildren {
  AuthLayoutIndexRoute: typeof AuthLayoutIndexRoute
  AuthLayoutMeAppointmentRoute: typeof AuthLayoutMeAppointmentRoute
  AuthLayoutMeProfileRoute: typeof AuthLayoutMeProfileRoute
  AuthLayoutMeTransactionRoute: typeof AuthLayoutMeTransactionRoute
  AuthLayoutProjectCreateRoute: typeof AuthLayoutProjectCreateRoute
  AuthLayoutRequestAppointmentRoute: typeof AuthLayoutRequestAppointmentRoute
  AuthLayoutRequestLecturingRoute: typeof AuthLayoutRequestLecturingRoute
  AuthLayoutRequestMentoringRoute: typeof AuthLayoutRequestMentoringRoute
  AuthLayoutAvailabilityIndexRoute: typeof AuthLayoutAvailabilityIndexRoute
  AuthLayoutDepositIndexRoute: typeof AuthLayoutDepositIndexRoute
  AuthLayoutProjectDetailIdRoute: typeof AuthLayoutProjectDetailIdRoute
}

const AuthLayoutRouteChildren: AuthLayoutRouteChildren = {
  AuthLayoutIndexRoute: AuthLayoutIndexRoute,
  AuthLayoutMeAppointmentRoute: AuthLayoutMeAppointmentRoute,
  AuthLayoutMeProfileRoute: AuthLayoutMeProfileRoute,
  AuthLayoutMeTransactionRoute: AuthLayoutMeTransactionRoute,
  AuthLayoutProjectCreateRoute: AuthLayoutProjectCreateRoute,
  AuthLayoutRequestAppointmentRoute: AuthLayoutRequestAppointmentRoute,
  AuthLayoutRequestLecturingRoute: AuthLayoutRequestLecturingRoute,
  AuthLayoutRequestMentoringRoute: AuthLayoutRequestMentoringRoute,
  AuthLayoutAvailabilityIndexRoute: AuthLayoutAvailabilityIndexRoute,
  AuthLayoutDepositIndexRoute: AuthLayoutDepositIndexRoute,
  AuthLayoutProjectDetailIdRoute: AuthLayoutProjectDetailIdRoute,
}

const AuthLayoutRouteWithChildren = AuthLayoutRoute._addFileChildren(
  AuthLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AuthLayoutRouteWithChildren
  '/': typeof AuthLayoutIndexRoute
  '/auth/login': typeof publicAuthLoginRoute
  '/fake-login/$token': typeof publicFakeLoginTokenRoute
  '/me/appointment': typeof AuthLayoutMeAppointmentRoute
  '/me/profile': typeof AuthLayoutMeProfileRoute
  '/me/transaction': typeof AuthLayoutMeTransactionRoute
  '/project/create': typeof AuthLayoutProjectCreateRoute
  '/request/appointment': typeof AuthLayoutRequestAppointmentRoute
  '/request/lecturing': typeof AuthLayoutRequestLecturingRoute
  '/request/mentoring': typeof AuthLayoutRequestMentoringRoute
  '/join': typeof publicJoinIndexRoute
  '/availability': typeof AuthLayoutAvailabilityIndexRoute
  '/deposit': typeof AuthLayoutDepositIndexRoute
  '/auth/google/callback': typeof publicAuthGoogleCallbackRoute
  '/profile/mentor/$id': typeof publicProfileMentorIdRoute
  '/project/detail/$id': typeof AuthLayoutProjectDetailIdRoute
}

export interface FileRoutesByTo {
  '/': typeof AuthLayoutIndexRoute
  '/auth/login': typeof publicAuthLoginRoute
  '/fake-login/$token': typeof publicFakeLoginTokenRoute
  '/me/appointment': typeof AuthLayoutMeAppointmentRoute
  '/me/profile': typeof AuthLayoutMeProfileRoute
  '/me/transaction': typeof AuthLayoutMeTransactionRoute
  '/project/create': typeof AuthLayoutProjectCreateRoute
  '/request/appointment': typeof AuthLayoutRequestAppointmentRoute
  '/request/lecturing': typeof AuthLayoutRequestLecturingRoute
  '/request/mentoring': typeof AuthLayoutRequestMentoringRoute
  '/join': typeof publicJoinIndexRoute
  '/availability': typeof AuthLayoutAvailabilityIndexRoute
  '/deposit': typeof AuthLayoutDepositIndexRoute
  '/auth/google/callback': typeof publicAuthGoogleCallbackRoute
  '/profile/mentor/$id': typeof publicProfileMentorIdRoute
  '/project/detail/$id': typeof AuthLayoutProjectDetailIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authLayout': typeof AuthLayoutRouteWithChildren
  '/_authLayout/': typeof AuthLayoutIndexRoute
  '/(public)/auth/login': typeof publicAuthLoginRoute
  '/(public)/fake-login/$token': typeof publicFakeLoginTokenRoute
  '/_authLayout/me/appointment': typeof AuthLayoutMeAppointmentRoute
  '/_authLayout/me/profile': typeof AuthLayoutMeProfileRoute
  '/_authLayout/me/transaction': typeof AuthLayoutMeTransactionRoute
  '/_authLayout/project/create': typeof AuthLayoutProjectCreateRoute
  '/_authLayout/request/appointment': typeof AuthLayoutRequestAppointmentRoute
  '/_authLayout/request/lecturing': typeof AuthLayoutRequestLecturingRoute
  '/_authLayout/request/mentoring': typeof AuthLayoutRequestMentoringRoute
  '/(public)/join/': typeof publicJoinIndexRoute
  '/_authLayout/availability/': typeof AuthLayoutAvailabilityIndexRoute
  '/_authLayout/deposit/': typeof AuthLayoutDepositIndexRoute
  '/(public)/auth/google/callback': typeof publicAuthGoogleCallbackRoute
  '/(public)/profile/mentor/$id': typeof publicProfileMentorIdRoute
  '/_authLayout/project/detail/$id': typeof AuthLayoutProjectDetailIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/'
    | '/auth/login'
    | '/fake-login/$token'
    | '/me/appointment'
    | '/me/profile'
    | '/me/transaction'
    | '/project/create'
    | '/request/appointment'
    | '/request/lecturing'
    | '/request/mentoring'
    | '/join'
    | '/availability'
    | '/deposit'
    | '/auth/google/callback'
    | '/profile/mentor/$id'
    | '/project/detail/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/login'
    | '/fake-login/$token'
    | '/me/appointment'
    | '/me/profile'
    | '/me/transaction'
    | '/project/create'
    | '/request/appointment'
    | '/request/lecturing'
    | '/request/mentoring'
    | '/join'
    | '/availability'
    | '/deposit'
    | '/auth/google/callback'
    | '/profile/mentor/$id'
    | '/project/detail/$id'
  id:
    | '__root__'
    | '/_authLayout'
    | '/_authLayout/'
    | '/(public)/auth/login'
    | '/(public)/fake-login/$token'
    | '/_authLayout/me/appointment'
    | '/_authLayout/me/profile'
    | '/_authLayout/me/transaction'
    | '/_authLayout/project/create'
    | '/_authLayout/request/appointment'
    | '/_authLayout/request/lecturing'
    | '/_authLayout/request/mentoring'
    | '/(public)/join/'
    | '/_authLayout/availability/'
    | '/_authLayout/deposit/'
    | '/(public)/auth/google/callback'
    | '/(public)/profile/mentor/$id'
    | '/_authLayout/project/detail/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthLayoutRoute: typeof AuthLayoutRouteWithChildren
  publicAuthLoginRoute: typeof publicAuthLoginRoute
  publicFakeLoginTokenRoute: typeof publicFakeLoginTokenRoute
  publicJoinIndexRoute: typeof publicJoinIndexRoute
  publicAuthGoogleCallbackRoute: typeof publicAuthGoogleCallbackRoute
  publicProfileMentorIdRoute: typeof publicProfileMentorIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthLayoutRoute: AuthLayoutRouteWithChildren,
  publicAuthLoginRoute: publicAuthLoginRoute,
  publicFakeLoginTokenRoute: publicFakeLoginTokenRoute,
  publicJoinIndexRoute: publicJoinIndexRoute,
  publicAuthGoogleCallbackRoute: publicAuthGoogleCallbackRoute,
  publicProfileMentorIdRoute: publicProfileMentorIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authLayout",
        "/(public)/auth/login",
        "/(public)/fake-login/$token",
        "/(public)/join/",
        "/(public)/auth/google/callback",
        "/(public)/profile/mentor/$id"
      ]
    },
    "/_authLayout": {
      "filePath": "_authLayout.tsx",
      "children": [
        "/_authLayout/",
        "/_authLayout/me/appointment",
        "/_authLayout/me/profile",
        "/_authLayout/me/transaction",
        "/_authLayout/project/create",
        "/_authLayout/request/appointment",
        "/_authLayout/request/lecturing",
        "/_authLayout/request/mentoring",
        "/_authLayout/availability/",
        "/_authLayout/deposit/",
        "/_authLayout/project/detail/$id"
      ]
    },
    "/_authLayout/": {
      "filePath": "_authLayout/index.tsx",
      "parent": "/_authLayout"
    },
    "/(public)/auth/login": {
      "filePath": "(public)/auth/login.tsx"
    },
    "/(public)/fake-login/$token": {
      "filePath": "(public)/fake-login.$token.tsx"
    },
    "/_authLayout/me/appointment": {
      "filePath": "_authLayout/me/appointment.tsx",
      "parent": "/_authLayout"
    },
    "/_authLayout/me/profile": {
      "filePath": "_authLayout/me/profile.tsx",
      "parent": "/_authLayout"
    },
    "/_authLayout/me/transaction": {
      "filePath": "_authLayout/me/transaction.tsx",
      "parent": "/_authLayout"
    },
    "/_authLayout/project/create": {
      "filePath": "_authLayout/project/create.tsx",
      "parent": "/_authLayout"
    },
    "/_authLayout/request/appointment": {
      "filePath": "_authLayout/request/appointment.tsx",
      "parent": "/_authLayout"
    },
    "/_authLayout/request/lecturing": {
      "filePath": "_authLayout/request/lecturing.tsx",
      "parent": "/_authLayout"
    },
    "/_authLayout/request/mentoring": {
      "filePath": "_authLayout/request/mentoring.tsx",
      "parent": "/_authLayout"
    },
    "/(public)/join/": {
      "filePath": "(public)/join/index.tsx"
    },
    "/_authLayout/availability/": {
      "filePath": "_authLayout/availability/index.tsx",
      "parent": "/_authLayout"
    },
    "/_authLayout/deposit/": {
      "filePath": "_authLayout/deposit/index.tsx",
      "parent": "/_authLayout"
    },
    "/(public)/auth/google/callback": {
      "filePath": "(public)/auth/google.callback.tsx"
    },
    "/(public)/profile/mentor/$id": {
      "filePath": "(public)/profile/mentor.$id.tsx"
    },
    "/_authLayout/project/detail/$id": {
      "filePath": "_authLayout/project/detail/$id.tsx",
      "parent": "/_authLayout"
    }
  }
}
ROUTE_MANIFEST_END */
